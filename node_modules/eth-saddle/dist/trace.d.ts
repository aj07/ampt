import { NetworkConfig } from './config';
import { TransactionReceipt } from 'web3-core';
import { TraceInfo } from './trace/descriptor';
export interface StructLog {
    depth: number;
    error: string;
    gas: number;
    gasCost: number;
    memory: null | string[];
    op: string;
    pc: number;
    stack: string[];
    storage: {
        [key: string]: string;
    };
}
export interface TraceOptions {
    constants?: {
        [key: string]: string;
    };
    onTrace?: (Trace: any) => Promise<void>;
    preFilter?: undefined | ((log: StructLog) => boolean);
    postFilter?: undefined | ((log: StructLog) => boolean);
    execLog?: undefined | ((log: StructLog, info: TraceInfo) => Promise<void>);
    exec?: undefined | ((logs: StructLog[], info: TraceInfo) => Promise<void>);
}
export declare function buildTracer(network_config: NetworkConfig): Promise<(receipt: TransactionReceipt, traceOpts: TraceOptions) => Promise<any>>;
//# sourceMappingURL=trace.d.ts.map